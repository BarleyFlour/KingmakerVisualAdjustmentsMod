<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Aze.Publicise.MSBuild.Task.1.0.0\build\Aze.Publicise.MSBuild.Task.props" Condition="Exists('..\packages\Aze.Publicise.MSBuild.Task.1.0.0\build\Aze.Publicise.MSBuild.Task.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <WrathPath Condition="'$(WrathPath)' == ''">P:\SteamLibrary\steamapps\common\Pathfinder Second Adventure</WrathPath>
    <InstallDir Condition=" '$(InstallDir)' == '' ">$(WrathPath)</InstallDir>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <Target Name="Publicise" AfterTargets="Clean">
    <ItemGroup>
      <PubliciseInputAssemblies Include="$(InstallDir)\Wrath_Data\Managed\Assembly-CSharp.dll" />
    </ItemGroup>
    <Publicise InputAssemblies="@(PubliciseInputAssemblies)" OutputPath="$(SolutionDir)lib/" PubliciseCompilerGenerated="true" />
  </Target>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3724AF9A-1765-4FBD-B4BF-1C7A89CF2510}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>VisualAdjustments</RootNamespace>
    <AssemblyName>VisualAdjustments</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>false</Deterministic>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Deterministic>false</Deterministic>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\VisualAdjustments\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug Install|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>$(WrathPath)Mods\VisualAdjustments\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>portable</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <Deterministic>false</Deterministic>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Accessors.cs" />
    <Compile Include="AnimalEquipment.cs" />
    <Compile Include="BubbleFuzzyMatch\FuzzyMatchContext.cs" />
    <Compile Include="BubblesSaveHooker.cs" />
    <Compile Include="BuffHandler.cs" />
    <Compile Include="CabariusModKitUII\GUIHelper.cs" />
    <Compile Include="CabariusModKitUII\Private\Toggle.cs" />
    <Compile Include="CabariusModKitUII\RichText.cs" />
    <Compile Include="CabariusModKitUII\UI+Builders.cs" />
    <Compile Include="CabariusModKitUII\UI+Controls.cs" />
    <Compile Include="CabariusModKitUII\UI+Elements.cs" />
    <Compile Include="CabariusModKitUII\UI+Pickers.cs" />
    <Compile Include="CabariusModKitUII\UI+Toggles.cs" />
    <Compile Include="CabariusModKitUII\UI+Wrappers.cs" />
    <Compile Include="CharacterManager.cs" />
    <Compile Include="EELpickerUI.cs" />
    <Compile Include="ColorPicker.cs" />
    <Compile Include="CustomTypes.cs" />
    <Compile Include="DollResourcesManager.cs" />
    <Compile Include="EffectsManager.cs" />
    <Compile Include="EquipmentEntityPart.cs" />
    <Compile Include="EquipmentResourcesManager.cs" />
    <Compile Include="ExtractEquipmentEntities.cs" />
    <Compile Include="HandsEquipmentManager.cs" />
    <Compile Include="InfoManager.cs" />
    <Compile Include="Main.cs" />
    <Compile Include="mattatzcolor\Scripts\Editor\IMColorPickerEditor.cs" />
    <Compile Include="mattatzcolor\Scripts\IMColorPicker.cs" />
    <Compile Include="mattatzcolor\Scripts\IMColorPreset.cs" />
    <Compile Include="mattatzcolor\Scripts\IMColorUtil.cs" />
    <Compile Include="ModifiedCreateDollData.cs" />
    <Compile Include="PortraitPatch.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ResourceInfo.cs" />
    <Compile Include="Settings.cs" />
    <Compile Include="SpacehamsterUnlock\Unlocker.cs" />
    <Compile Include="Test.cs" />
    <Compile Include="UGUI\BundleManger.cs" />
    <Compile Include="UGUI\Core.cs" />
    <Compile Include="UGUI\DefaultLanguage.cs" />
    <Compile Include="UGUI\Main.cs" />
    <Compile Include="UGUI\Settings.cs" />
    <Compile Include="UGUI\UGUIPatches.cs" />
    <Compile Include="UGUI\UIController.cs" />
    <Compile Include="UGUI\UIManager.cs" />
    <Compile Include="UGUI\Unity Scripts\ColorApplyButtonScript.cs" />
    <Compile Include="UGUI\Unity Scripts\FCP_SpriteMeshEditor.cs" />
    <Compile Include="UGUI\Unity Scripts\FlexibleColorPicker.cs" />
    <Compile Include="UGUI\Unity Scripts\FXUIHandler.cs" />
    <Compile Include="UGUI\Unity Scripts\SelectedWeaponSlotHandler.cs" />
    <Compile Include="UnorderedList.cs" />
    <Compile Include="Util.cs" />
    <Compile Include="ViewManager.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="info.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="Repository.json" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\Assembly-CSharp-firstpass.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Assembly-CSharp_public">
      <HintPath>..\lib\Assembly-CSharp_public.dll</HintPath>
    </Reference>
    <Reference Include="DXTCompressor">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\DXTCompressor.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\Newtonsoft.Json.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Owlcat.Runtime.Core, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Owlcat.Runtime.UI">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.UI.dll</HintPath>
    </Reference>
    <Reference Include="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="UniRx">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UniRx.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\Unity.TextMeshPro.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.ClothModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.ClothModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.ImageConversionModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.IMGUIModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.IMGUIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.UI.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.UIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityModManager">
      <HintPath>$(WrathPath)\Wrath_Data\Managed\UnityModManager\UnityModManager.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="..\..\WrathModMaker\ModMaker\ModMaker.projitems" Label="Shared" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Aze.Publicise.MSBuild.Task.1.0.0\build\Aze.Publicise.MSBuild.Task.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Aze.Publicise.MSBuild.Task.1.0.0\build\Aze.Publicise.MSBuild.Task.props'))" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>
      xcopy /Y "$(TargetPath)" "$(WrathPath)\Mods\$(ProjectName)\$(ProjectName).dll*"
      xcopy /Y "$(TargetPath)" "$(WrathPath)\Mods\$(ProjectName)\$(ProjectName).pdb*"
    </PostBuildEvent>
  </PropertyGroup>
</Project>